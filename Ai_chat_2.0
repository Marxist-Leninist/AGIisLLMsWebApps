<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>AI Horde Text Generator</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        /* Basic styling */
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
            background-color: #f4f4f4;
        }

        h1 {
            color: #aa0000;
        }

        #prompt, #api-key {
            width: 100%;
            padding: 10px;
            font-size: 1em;
            margin-bottom: 10px;
        }

        #generate-btn {
            padding: 10px 20px;
            font-size: 1em;
            background-color: #aa0000;
            color: #fff;
            border: none;
            cursor: pointer;
            border-radius: 5px;
        }

        #generate-btn:hover {
            background-color: #cc0000;
        }

        #status {
            margin-top: 20px;
            font-weight: bold;
            color: #aa0000;
        }

        #generated-text {
            margin-top: 20px;
            white-space: pre-wrap;
            padding: 10px;
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 5px;
        }
    </style>
</head>
<body>
    <h1>AI Horde Text Generator</h1>
    <p>Enter a prompt to generate text:</p>
    <textarea id="prompt" rows="4" placeholder="Enter your prompt here"></textarea>
    <p>If you have an AI Horde API key, you can enter it below (optional):</p>
    <input type="text" id="api-key" placeholder="Enter your API key (optional)">
    <br>
    <button id="generate-btn">Generate Text</button>
    <div id="status"></div>
    <div id="generated-text"></div>

    <script>
        document.getElementById('generate-btn').addEventListener('click', function() {
            const prompt = document.getElementById('prompt').value.trim();
            if (!prompt) {
                alert('Please enter a prompt.');
                return;
            }

            const userApiKey = document.getElementById('api-key').value.trim();
            let apiKey = ''; // Default API key (leave empty for free access)

            // Use user's API key if provided
            if (userApiKey) {
                apiKey = userApiKey;
            }

            const requestHeaders = {
                'Content-Type': 'application/json',
            };
            if (apiKey) {
                requestHeaders['apikey'] = apiKey;
            }

            const payload = {
                "prompt": prompt,
                "params": {
                    "max_length": 150,
                    "temperature": 0.7,
                    "top_p": 0.9,
                    "model": "PygmalionAI/pygmalion-6b"
                }
            };

            document.getElementById('status').textContent = 'Submitting request...';
            document.getElementById('generated-text').textContent = '';

            fetch('https://aihorde.net/api/v1/text/generate/async', {
                method: 'POST',
                headers: requestHeaders,
                body: JSON.stringify(payload)
            })
            .then(response => response.json())
            .then(data => {
                const requestId = data.id;
                checkStatus(requestId);
            })
            .catch(error => {
                console.error('Error:', error);
                document.getElementById('status').textContent = 'An error occurred while submitting the request.';
            });

            function checkStatus(requestId) {
                fetch(`https://aihorde.net/api/v1/text/status/${requestId}`, {
                    headers: requestHeaders
                })
                .then(response => response.json())
                .then(data => {
                    if (data.done) {
                        const generatedText = data.generated_text;
                        document.getElementById('generated-text').textContent = generatedText;
                        document.getElementById('status').textContent = 'Text generated successfully!';
                    } else {
                        document.getElementById('status').textContent = `Waiting for text generation... (Queue position: ${data.queue_position})`;
                        setTimeout(() => checkStatus(requestId), 5000);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('status').textContent = 'An error occurred while checking the status.';
                });
            }
        });
    </script>
</body>
</html>
